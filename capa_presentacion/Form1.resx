<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bunifuDragControl1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +FbQAAAAAElFTkSuQmCC
</value>
  </data>
</root>